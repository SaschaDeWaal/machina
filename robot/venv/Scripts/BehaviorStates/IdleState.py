from BaseState import BaseStateimport timeimport randomfrom thread import start_new_threadclass IdleState(BaseState):    def __init__(self):        super(IdleState, self).__init__()        self.timer = 2    def onEnter(self):        super(IdleState, self).onEnter()        self.timer = 2        start_new_thread(self.asyncTestLoop, ())    def onLeave(self):        super(IdleState, self).onLeave()    def onUpdate(self, delta):        pass        #super(IdleState, self).onUpdate(delta)        #self.timer -= delta        #self.robotData.arduinoBridge.setTeamColour(random.randrange(0,2,1))        #if self.timer <= 0:         #   print "leaving IdleState, going to BaseState"          #  BaseState.goToState(self, "BaseState")    def asyncTestLoop(self):        print "start test"        self.robotData.arduinoBridge.setTeamColour(2)        """ True:            self.robotData.arduinoBridge.setTeamColour(0)            self.robotData.motorLeft.setSpeed(20)            self.robotData.motorRight.setSpeed(20)            time.sleep(5)            self.robotData.arduinoBridge.setTeamColour(1)            self.robotData.motorLeft.setSpeed(-20)            self.robotData.motorRight.setSpeed(-20)            time.sleep(5)            self.robotData.arduinoBridge.setTeamColour(2)            self.robotData.motorLeft.setSpeed(20)            self.robotData.motorRight.setSpeed(20)            time.sleep(5)            self.robotData.motorLeft.setSpeed(-20)            self.robotData.motorRight.setSpeed(-20)            time.sleep(5) """        print "klaar"        