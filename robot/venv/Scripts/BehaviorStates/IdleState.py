from BaseState import BaseStateimport timeimport randomfrom thread import start_new_threadclass IdleState(BaseState):    def __init__(self):        super(IdleState, self).__init__()        self.timer = 2    def onEnter(self):        super(IdleState, self).onEnter()        self.timer = 2        start_new_thread(self.asyncTestLoop, ())    def onLeave(self):        super(IdleState, self).onLeave()    def onUpdate(self, delta):        super(IdleState, self).onUpdate(delta)        self.timer -= delta        self.robotData.arduinoBridge.setTeamColour(random.randrange(0,2,1))        if self.timer <= 0:            print "leaving IdleState, going to BaseState"            BaseState.goToState(self, "BaseState")    def asyncTestLoop(self):        self.robotData.arduinoBridge.setTeamColour(0)        self.robotData.motorLeft.setSpeed(1)        self.robotData.motorRight.setSpeed(1)        time.sleep(5)        self.robotData.motorLeft.setSpeed(-1)        self.robotData.motorRight.setSpeed(-1)        time.sleep(5)        self.robotData.motorLeft.setSpeed(0)        self.robotData.motorRight.setSpeed(0)        self.robotData.arduinoBridge.setTeamColour(1)        